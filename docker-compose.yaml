services:
  db:
    container_name: db
    env_file:
      - api/.env
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
    image: postgres:16
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: rootemail@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

  # api:
  #   container_name: api
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3333:3333"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3333"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 30s
  #   depends_on:
  #     - db
  #   networks:
  #     - app-network
  # web:
  #   container_name: web
  #   build:
  #     context: ./web
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8090:80"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:80"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 30s
  #   depends_on:
  #     - db
  #   networks:
  #     - app-network
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
volumes:
  db_data:
  pgadmin_data:
networks:
  app-network:
    driver: bridge
