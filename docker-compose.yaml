services:
  db:
    container_name: db
    env_file:
      - api/.env
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
    image: postgres:16
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - db
      - web
    networks:
      - app-network
  web:
    container_name: web
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8090:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - db
    networks:
      - app-network
    # volumes:
    #   - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
volumes:
  db_data:
networks:
  app-network:
    driver: bridge
